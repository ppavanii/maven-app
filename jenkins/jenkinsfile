pipeline {

    agent {
    	node {
    		label 'java11'
    		}
    }

   //triggers {
     //   cron('H(0-0) 1 * * *')
    //}

    environment {

                 //MyEnv Variables 
                 MYCLASS='DevOPS'
  
    }
    

    //options     {
                //timestamps()
                //buildDiscarder(logRotator(numToKeepStr: '2', artifactNumToKeepStr: '2'))
                //timeout(time: 240, unit: 'MINUTES')
                //disableConcurrentBuilds()
               // }

    parameters {
            string(name: 'appBranch', defaultValue: 'main', description: "Application Branch name of the Repo")
                }


    stages {
        stage('App-Code-Checkout-GitHUB') {
            steps {

            	git branch: appBranch , url: 'https://github.com/ppavanii/maven-app.git'
        
            }
        }

    stage('Maven Build') {
          steps {
        
        	  	sh 'mvn clean package'
        	 
            }
        }


    stage('Docker Build') {
          steps {
            withCredentials([string(credentialsId: 'DOCKER_TOKEN', variable: 'DOCKER_PASSWORD')]) 

            	sh 'docker build . -t moonica/awsbatch1:latest'
        	  //	sh 'docker login -u moonica -p ${DOCKER_PASSWORD}'
        	  //	sh 'docker push moonica/awsbatch1:latest'
        	  	sh 'docker run -d moonica/awsbatch1:latest'
        	 
            }
       
    }
    stage('Archive and clean workspace') {
                steps {
                    
                    archive 'target/demo*.jar'
                    //archiveArtifacts artifacts: 'target/*.jar', followSymlinks: false
                    cleanWs()
                }
    }
}
}